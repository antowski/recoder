// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd

#Использовать asserts
#Использовать tempfiles
#Использовать logos
#Использовать "..\.."

Перем Лог;

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯСоздаюВоВременномКаталогеТекстовыйФайлВКодировкеСТекстом");
	ВсеШаги.Добавить("ЯВыполняюПерекодировкуВременногоКаталога");
	ВсеШаги.Добавить("ЯЧитаюТекстВКодировкеИзФайлаВоВременномКаталоге");
	ВсеШаги.Добавить("ПрочитанныйТекстСодержитСтроку");
	ВсеШаги.Добавить("ЯСоздаюКаталогВоВременномКаталогеИСохраняюЕгоВКонтекст");
	ВсеШаги.Добавить("ЯСоздаюВоВложенномКаталогеТекстовыйФайлВКодировкеСТекстом");
	ВсеШаги.Добавить("ЯЧитаюТекстВКодировкеИзФайлаВоВложенномКаталоге");
	ВсеШаги.Добавить("ЯВыполняюПерекодировкуВременногоКаталогаСМаскойПоиска");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт
	
КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт
	
КонецПроцедуры

//Я создаю во временном каталоге текстовый файл "first.txt" в кодировке "windows-1251" с текстом "Кириллица \nand latin"
Процедура ЯСоздаюВоВременномКаталогеТекстовыйФайлВКодировкеСТекстом(Знач ИмяФайла, Знач Кодировка, Знач ТекстФайла) Экспорт

	ПолноеИмяФайла = ОбъединитьПути(ВременныйКаталог(),ИмяФайла);
	СоздатьФайлСТекстом(ПолноеИмяФайла, Кодировка, ТекстФайла);

КонецПроцедуры

//Я выполняю перекодировку временного каталога
Процедура ЯВыполняюПерекодировкуВременногоКаталога() Экспорт
	Перекодировщик.ПерекодироватьКаталог(ВременныйКаталог());
КонецПроцедуры

//Я читаю текст в кодировке "utf-8" из файла "first.txt" во временном каталоге
Процедура ЯЧитаюТекстВКодировкеИзФайлаВоВременномКаталоге(Знач Кодировка, Знач ИмяФайла) Экспорт
	
	ПрочитатьТекстВКодировкеИзФайлаВКаталоге(Кодировка, ИмяФайла, ВременныйКаталог());

КонецПроцедуры

//Я создаю каталог во временном каталоге и сохраняю его в контекст
Процедура ЯСоздаюКаталогВоВременномКаталогеИСохраняюЕгоВКонтекст() Экспорт

	ПолноеИмяКаталога = ОбъединитьПути(ВременныйКаталог(), "Вложенный каталог");
	СоздатьКаталог(ПолноеИмяКаталога);
	БДД.СохранитьВКонтекст("ВложенныйКаталог", ПолноеИмяКаталога);

КонецПроцедуры

//Я создаю во вложенном каталоге текстовый файл "МодульФормы.1s" в кодировке "windows-1251" с текстом "ПровестиДокумент();"
Процедура ЯСоздаюВоВложенномКаталогеТекстовыйФайлВКодировкеСТекстом(Знач ИмяФайла, Знач Кодировка, Знач ТекстФайла) Экспорт
	
	ПолноеИмяФайла = ОбъединитьПути(ВложенныйКаталог(),ИмяФайла);
	СоздатьФайлСТекстом(ПолноеИмяФайла, Кодировка, ТекстФайла);
	
КонецПроцедуры

//Я читаю текст в кодировке "utf-8" из файла "МодульФормы.1s" во вложенном каталоге
Процедура ЯЧитаюТекстВКодировкеИзФайлаВоВложенномКаталоге(Знач Кодировка, Знач ИмяФайла) Экспорт
	
	ПрочитатьТекстВКодировкеИзФайлаВКаталоге(Кодировка, ИмяФайла, ВложенныйКаталог());

КонецПроцедуры

//прочитанный текст содержит строку "ПровестиДокумент();"
Процедура ПрочитанныйТекстСодержитСтроку(Знач СтрокаПоиска) Экспорт
	
	Ожидаем.Что(БДД.ПолучитьИзКонтекста("ПрочитанныйТекст")).Содержит(СтрокаПоиска);

КонецПроцедуры

Процедура СоздатьФайлСТекстом(ПолноеИмяФайла, Кодировка, ТекстФайла)
	
	Лог.Отладка("Создаю файл: " + ПолноеИмяФайла);

	ЗаписьТекста = Новый ЗаписьТекста(ПолноеИмяФайла, Кодировка);
	ЗаписьТекста.Записать(ТекстФайла);
	ЗаписьТекста.Закрыть();

КонецПроцедуры

Процедура ПрочитатьТекстВКодировкеИзФайлаВКаталоге(Знач Кодировка, Знач ИмяФайла, Знач ИмяКаталога) Экспорт
	
	ПолноеИмяФайла = ОбъединитьПути(ИмяКаталога,ИмяФайла);

	Читатель = Новый ЧтениеТекста(ПолноеИмяФайла, Кодировка);
    БДД.СохранитьВКонтекст("ПрочитанныйТекст", Читатель.Прочитать());
	Читатель.Закрыть();

КонецПроцедуры

//Я выполняю перекодировку временного каталога с маской поиска "1s,frm"
Процедура ЯВыполняюПерекодировкуВременногоКаталогаСМаскойПоиска(Знач МаскаПоиска) Экспорт
	Перекодировщик.ПерекодироватьКаталог(ВременныйКаталог(), МаскаПоиска);
КонецПроцедуры


Функция ВременныйКаталог()
	Возврат БДД.ПолучитьИзКонтекста("ВременныйКаталог");
КонецФункции

Функция ВложенныйКаталог()
	Возврат БДД.ПолучитьИзКонтекста("ВложенныйКаталог");
КонецФункции

Лог = Логирование.ПолучитьЛог("oscript.lib.recoder");
//Лог.УстановитьУровень(УровниЛога.Отладка);
